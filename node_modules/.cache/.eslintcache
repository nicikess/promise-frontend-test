[{"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/index.js":"1","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/App.jsx":"2","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/styles.js":"3","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/data/Participants.jsx":"4","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/NavBar.js":"5","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Footer.js":"6","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Overview.js":"7","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Expertise.js":"8","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Home.js":"9","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Tools.js":"10","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/UserProfile.js":"11","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/UserStory.js":"12","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/VerticalSpace.js":"13","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/PmExpertise.js":"14","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/AnalysisExpertise.js":"15","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/VerticalSpace.js":"16"},{"size":327,"mtime":1679079269744,"results":"17","hashOfConfig":"18"},{"size":1021,"mtime":1679079269239,"results":"19","hashOfConfig":"18"},{"size":1031,"mtime":1679122054300,"results":"20","hashOfConfig":"18"},{"size":21927,"mtime":1679084019832,"results":"21","hashOfConfig":"18"},{"size":4193,"mtime":1679080648296,"results":"22","hashOfConfig":"18"},{"size":1185,"mtime":1679079269306,"results":"23","hashOfConfig":"18"},{"size":5264,"mtime":1679080501348,"results":"24","hashOfConfig":"18"},{"size":2274,"mtime":1679079269273,"results":"25","hashOfConfig":"18"},{"size":4442,"mtime":1679080625946,"results":"26","hashOfConfig":"18"},{"size":8603,"mtime":1679090628439,"results":"27","hashOfConfig":"18"},{"size":790,"mtime":1679087601865,"results":"28","hashOfConfig":"18"},{"size":697,"mtime":1679083619962,"results":"29","hashOfConfig":"18"},{"size":442,"mtime":1675850248761,"results":"30","hashOfConfig":"18"},{"size":3518,"mtime":1679079269534,"results":"31","hashOfConfig":"18"},{"size":3599,"mtime":1679079269507,"results":"32","hashOfConfig":"18"},{"size":167,"mtime":1679079269628,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xrs1gj",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/index.js",[],[],"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/App.jsx",["92","93","94","95","96"],[],"import React from \"react\";\n\nimport ResponsiveAppBar from \"./components/NavBar\";\nimport useStyles from \"./styles\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Footer from \"./components/Footer\";\nimport Overview from \"./components/Overview\";\nimport Expertise from \"./components/Expertise\";\nimport Home from \"./components/Home\";\nimport Tools from \"./components/Tools\";\n\nconst App = () => {\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const pages = [\"Start page\", \"Participant overview\", \"Blog\"];\n  const classes = useStyles();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <div>\n      <ResponsiveAppBar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"Overview\" element={<Overview />} />\n        <Route path=\"Expertise\" element={<Expertise />} />\n        <Route path=\"Tools\" element={<Tools />} />\n      </Routes>\n      <Footer />\n    </div>\n  );\n};\nexport default App;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/styles.js",[],[],"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/data/Participants.jsx",["97","98","99","100","101","102","103","104","105","106","107","108","109","110"],[],"const participants = [\n  //Participant 1\n  {\n    name: \"Participant 1\",\n    userStory:\n    \"\\\"Starts by reading artifacts silently. (00:00-06:00)\\\n    Then he goes to Celonis and looks at the activities of the most common variants in the Variant Explorer and Process Explorer to familiarize, to get an initial understanding of the sequence of the process and the most common variants. He also makes a few assumptions about what he observes, for example \\\"\\\"so from Create Fine to Payment, this means that they received the fine directly on the place, right?\\\"\\\". (06:00-09:30)\\\n    Then, he looks at the research question to see what is expected and where to focus. (09:30-10:30)\\\n    He begins the analysis focusing on the Send for Credit Collection activity in Variant Explorer, which he had identified from the activity description as one circumstance for not paying. He filters for cases containing the Send for Credit Collection activity and explores variants. He then notices that some variants still contain the Payment activity and filters for cases without Payment. (10:30-14:00)\\\n    He mentions creating an OLAP table and looks at attributes to know what to put in, but quickly abandons that goal. (14:00-15:00) \\\n    [Replanning] Then, he decides to use the conformance checker as a fast solution to find reasons.\\\n    Since he doesn\\'t have a desired model, he uses the one discovered automatically by Celonis, removes the Send for Credit Collection activity to get the desired BPMN model and uses it as input for the conformance checker. Then he scrolls through the list of violations and stops at the first one, the Send for Credit Collection activity which was the one he wanted to drill down to. He performs root cause analysis for the Send for Credit Collection activity but doesn\\'t get any specific reason. Looks also at the other violations. (15:00-21:30)\\\n    [Replanning] He remembers about temporal constraints in the artifacts.\\\n    Applies throughput time selection filters to check the 90-day temporal constraint to find the answers. Then he moves on to check the temporal constraints about the prefecture. Checks the dismissal attribute and builds an OLAP table to check for dismissed cases. He\\'s satisfied with his findings. (21:30-33:00)\\\"\",\n    pmExpertise: \"Good\",\n    analysisExpertise: \"Basic\",\n    tool: [\"Celonis\"],\n  },\n\n  //Participant 2\n  {\n    name: \"Participant 2\",\n    pmExpertise: \"Average\",\n    userStory:\"\\\"Starts by reading the artifacts to get an understanding of the data (00:00-04:00) \\\n    Then he reads the guiding question (04:00-06:00). \\\n    Then he goes to Disco and looks the process map and general statistics to get a basic understanding of the process flow. (06:00 - 08:00). Then he switches between the guiding question and the artifacts attempting to find an activity that corresponds to not paying. Since he cannot find it, he looks into the attributes but then asks for help. The interviewer clarifies the question (08:00 - 13:00). \\\n    He continues searching in the attributes for something that could indicate not paying [seems not to know where to visualize attributes in Disco or raw data. He is encouraged by the interviewer]. (13:00-17:00) \\\n    Then he filters for cases that do not include the Payment activity and compares the DFG of the filtered event log in with the original one to find patterns [but he does not seem to find any] (17:00-24:30) \\\n    He asks the interviewer to clarify once more the concept of circumstance and decides that \\\"\\\"no Payment activity\\\"\\\" is then a circumstance. (24:00-27:00) \\\n    He seems to struggle to find reasons for it by looking at the DFG and goes to Celonis to look into some example cases to find the reasons for not having a Payment activity. He performs root cause analysis. (27:00-31:30) Starts switching between Celonis and Disco and mentions having some difficulties with understanding the root cause analysis results (31:30-34:30) \\\n    Then he goes to the conformance overview and tries to mine the model with the Payment activity and compares the results of the conformance checking, going through the violation list but he is unsure about the result and asks to move on with the questions (34:30-39:00)\\\"\",\n    analysisExpertise: \"Average\",\n    tool: [\"Disco\", \"Celonis\"],\n  },\n\n  //Participant 3\n  {\n    name: \"Participant 3\",\n    pmExpertise: \"Good\",\n    userStory:\"\\\"Starts by opening the event log as CSV to understand how the data is formatted and what it contains. (00:00-02:00)\\\n    Inspects the process map, looking at the activities and the main paths (02:00-06:30)\\\n    Opens the artifacts to have an idea of the context (06:30-11:00) \\\n    Then, she checks the guiding question and connects the \\\"\\\"reasons\\\"\\\" to the temporal constraints in the artifacts, which she thinks may hint to possible reasons (11:00-12:00)\\\n    She then explores the process map looking at the performance, finding bottlenecks (paths exhibiting long total and median duration) and rework. (13:00-18:00). She quickly checks the question to see if her findings answer it or not (18:00-18:30).\\\n    Then, she focuses on statistics [related to time] and starts looking at example cases in the variants, reflecting on the time constraints shown in the artifacts and the duration of transitions between activities [She never checks if the time constraints are respected or not] (18:30-27:00).\\\n    Notes down the first circumstance, i.e., that the police takes too long to send the fine (27:00-29:30)\\\n    Follows the same approach of looking at the variants and paths exhibiting long duration, finding the second circumstance in the delay between \\\"\\\"Add Penalty\\\"\\\" and \\\"\\\"Send for Credit Collection\\\"\\\" (19:30-32:00)\\\n    Then, she focuses on event attributes thinking that there must be something indicating how much the offender had to pay. She looks at the attribute distribution in Disco and notices that for one third of the cases the amount of the fine is empty. She thinks that the police is sending the fine without amount to pay and writes this as third circumstance (32:00-34:00).\\\n    \\\"\",\n    analysisExpertise: \"Average\",\n    tool: [\"Disco\"],\n  },\n\n  //Participant 4\n  {\n    name: \"Participant 4\",\n    pmExpertise: \"Average\",\n    userStory:\"\\\"Starts by opening the event log as CSV to better understand the data and relate it to the question. He checks the guiding questions and decides to perform the analysis in Disco. (00:00-04:30)\\\n    In Disco, the participant starts by loading the event log for which he checks the artifacts again to decide which attributes he wants to include. He only loads a subset of the available attributes with the note to maybe adapt this later in the analysis, in case he notices that the selection is not enough to answer the question. (04:30-08:30)\\\n    After the event log is loaded, the participant reads and understands the activities in the process map. He is missing something and takes a few minutes to understand that there is no activity specific to missing payments and that he can find additional process variants not ending with the Payment activity by increasing the path-slider. (08:30-20:00)\\\n    After the analysis of the activities and variants, the participant explains to the interviewer how he would analyze the circumstances in more detail in PM4Py, in case he had more time (20:00-25:00).\\\n    To provide root causes of the circumstances, the participant uses ProM in which he tests a couple of methods: Inductive Visual Miner, Petri Net & Interactive Data-aware Heuristic Miner to identify \\\"\\\"this very explainable structure\\\"\\\" [understand the circumstances and provide root causes]. [He is not successful.] (25:00-29:00)\\\n    Afterwards, he decides to continues looking at the process map in Disco and takes notes regarding the three circumstances and his assumption regarding the root causes of the circumstances, solely based on the activities and variants displayed. (29:00-35:30)\\\n    The participant opens ProM again to test the Social Networking Mining in order to identify the most critical node for the variants leading to a missing payment. He create a Social Network (HoW) in ProM and notice that he missed to add a filter to the event log beforehand to be able to interpret results [not successful -  the interpretation is not clear and he is not able to identify any root causes]. (35:30 - 44:30)\\\n    The participant was stopped before performing a further analysis to continue with the questions & interview.\\\"\",\n    analysisExpertise: \"Average\",\n    tool: [\"Disco\", \"ProM\"],\n  },\n\n  //Participant 5\n  {\n    name: \"Participant 5\",\n    pmExpertise: \"Average\",\n    userStory:\"\\\"After some connection problems, the participant starts from reading the artifacts and familiarize herself with the activities. Some activities and translation problems are clarified with help of the interviewer (00:00-08:00).\\\n    Afterwards, the analyst starts the analysis in the Process Explorer in Celonis, by following and understanding the activities. First, the visible connections are selected to a minima while in a second step she extends them, to get a feeling for the process (08:00-11:00).\\\n    Afterwards, the analyst searches for promising attributes for the analysis in the artifact documentation. She searches for the attributes to be able to compare amount to be paid vs. actual paid amount (11:00-14:30).\\\n    The analysts starts creating an OLAP table but seems to struggling with the selection of columns to be included in that table. She didn\\'t add any fields. [Replanning] She checks the documentation and the variant explorer in Celonis again. Additionally, she invests in understanding the different process variants and specially the end activities of the process (14:30-23:00). \\\n    [Replanning] She looks into the documents and reminds herself of the goals of the analysis. She explains her thought process about continuing the analysis with help of conformance checking. (23:00-27:30).\\\n    After another look at the Variant and Process Explorer, she switches to the Conformance View and starts adapting the to-be BPMN model. [A structured approach or a clear reason for the performed edits is not clear] [The analysis leads to no outcomes /insights about circumstances or root causes] (27:30 - 40:00).\\\n    She filters the process to cases with payment and uses the process overview to look at temporal aspects like the case distribution per month and the throughput time. Based on the case distribution, the analyst is able to identify a circumstance based on peaks in the distribution and ends the analysis (40:00-45:00)\\\"\",\n    analysisExpertise: \"Average\",\n    tool: [\"Celonis\"],\n  },\n\n  //Participant 6\n  {\n    name: \"Participant 6\",\n    pmExpertise: \"Good\",\n    userStory:\"\\\"The participant starts by reading the artifacts aloud (00:00-04:00).  \\\n    After that she reads the guiding question and clarifies some open questions with the interviewer (04:00-06:30) .  \\\n    Then she opens Disco where she starts making sense of the control flow of the process and the involved activities by using the process map. She jumps back and forth between the activity descriptions in the artifacts and the process map. (06:00-13:00).  \\\n    While still using the process map, she starts to hypothesize about potential root causes [not data driven] about certain paths of the process (e.g. payment before fine is send). (13:00-14:00) \\\n    Now she focuses on the control-flow again and considers the frequency of events and the duration between events. She takes notes to capture her findings in between (14:00-18:30). \\\n    She dives deeper into performance related details and notices the temporal constraints within the process. [Even though the noticed the temporal constraints, it seems like she is not sure how to analyse it]. Still using the Process Map, she jumps between checking the performance, the number of events and temporal constraints/activity descriptions based on the provided artifacts. Before setting the filter, she mentioned that she is interested in checking if fines are not paid due to the late notification (18:30-24:00).\\\n    Therefore, she filters the data for a specific path . She uses the case view and observes that the payment still occurs in her selection, which she confirms in the Process Map (24:00-26:30). She switches back to the unfiltered event log where she checks further paths with and without payment and activities which can be followed after “Send Fine” (26:30-29:30). \\\n    [Brief interruption (29:30-33:00)].  \\\n    She decides to use performance metrics instead of frequency metrics to see the minimum and maximum durations [seems to not draw any conclusions based on the information]. She switches back to frequency metrics and changes the level of detail a couple of times [without any notably insights gained?] (33:00 - 37:30).  \\\n    She applies an endpoint filtering (“send fine”). By viewing the cases, she emits an hypothesis for a root cause of fines not being paid [fines are being sent too late because of a resource management problem,  which leads to a lot of fines not being paid] (37:30-45:00).  \\\n    She goes back to the unfiltered log and browses through the process map and explains using absolute frequency how many payments are not performed. She applies different levels of details and checks activities. [Seems like she is trying to come up with a valid hypothesis on activities following the payment, but everything seems a bit random] (45:00:56:00).\\\n    She uses the statistics view to check additional patterns and is interested in the number of events per case. (56:00-59:00).  \\\n    After going back to the process map and considering the flow at the full level of detail, she filters for cases being paid to understand the paths to payment. [Thanks to this step, she is able to understand why the payment activity is redundant in some cases]. (59:00-1:10).  \\\n    She later tries to explain why some cases are being sent to credit collection after payment [Unsuccessfully?] (1:10:00-1:16:30). \\\n     She starts to explain her main findings: (1) in a lot of cases, the fine is being sent very late, resulting in fines not being paid [the amount is unclear] (2) some payments are performed in two or three phases, (3) the system sometimes believes that the payment is not done, sending a message to credit collection [she assumes that it is an external process], while some partial payments do not require the credit collection step . [Connection interrupted] (1:16:30-1:19:30). \\\n    She finally switches to ProM, using the dotted chart to differentiate between activities, and finds that most are being sent to credit collection, which she confirms in Disco by observing the control flow of the process . She tries a similar approach for the payment activity but is stopped by time (1:19:30-1:27:00). \\\"\",\n    analysisExpertise: \"Good\",\n    tool: [\"Disco\"],\n  },\n\n  //Participant 7\n  {\n    name: \"Participant 7\",\n    pmExpertise: \"Advanced\",\n    userStory:\n    \"\\\"The participants carefully reads all information available from in the provided pdf files, i.e. the instruction, all information in the artifacts. (00:00-08:30). Then he looks at the guiding question, thinking about what patterns in the data could help answering the question. (08:30-11:00)\\\n    Afterwards, he elaborates his tool selection and decides to perform the analysis in Disco. From the Process Map, he follows the different activities and variants and re-checks some of the activity explanations in the artifacts (11:00-20:00). [It seems like the participant is happy with his understanding and was able to generate some hypothesis/ideas on what to check next. These ideas are not explicitly stated.]\\\n    He analyzes the end activities of the process and filters on the most common end activity. After realizing that he is looking at a complicated subset of the event log and decides that also filtering for other end activities might not help him, he switches to the Cases View [because he noticed that the analysis of the end activities is not as promising as expected] (20:00-24:30).\\\n    [Replanning] By analyzing the most common variant, the participant identifies his first finding and interprets this variant [interpretation is not fully based on the data]. He now dives deeper into the different variants and captures his findings for the top 10 variants. Selectively, he filters on a few of the variants and checks the statistics on attributes, without any additional insights (24:30-42:00). [His findings and the circumstances are based on the most common variants identified without full payment.]\\\"\",\n    analysisExpertise: \"Average\",\n    tool: [\"Disco\"],\n  },\n\n  //Participant 8\n  {\n    name: \"Participant 8\",\n    pmExpertise: \"Advanced\",\n    userStory:\n    \"\\\"After having only a quick look at the guiding question, the participant starts his analysis using ProM. He immediately analysis the variants and notices that the most coming variant could be interesting for him. (00:00-05:00)\\\n    When he wants to analyze cases from the first variant in more detail, ProM crashes and he switches to Celonis, but he is not comfortable using the tool and can not quickly achieve what he wants. He switches back to ProM. (05:00-13:00)\\\n    He continues checking the variants in ProM and manually compares the amounts and paid amounts of exemplary traces of the variants (13:00-15:00)\\\n    [Replanning] The participant notices that he is might be looking at the wrong variants and switches to the action menu to add filters [he is not fully aware of what he is looking for and ends up clicking just any function]. While the selection (split traces) loads, he switches back to Celonis (15:00-16:30).\\\n    The participant is switching between the Dashboards and tries to find filtering options. After expressing the need for filtering on cases without payment, the interviewer helped him and guided him to the process explorer from where he set the filter. With the filter applied, he switches again through the Dashboards, trying to identify any patterns. He checks different cases and attributes [he is not following any hypothesis/structured exploration]. After adding an additional filter for cases ending with send fine, he notices the throughput time and formulates his first insight from the analysis [he noticed the throughput time rather by chance] (16:30-26:30).\\\n    He now wants to dive into more details to analyses the connection between Create Fine - Send Fine. However, while he filters for the connection, he notices that he has missed to consider some other activities (slider in process explorer was at 0%) that he is interested in and focuses on different other activities [gets distracted from his original goal/lost in details] (26:30-29:30).\\\n    Then he wants to check if there are any attributes that could helm him understanding the appeal to judge. He jumps back in the documentation and identifies the dismissal attribute, which he considers as very important. He states that he should have checked the activity and attribute descriptions earlier. He jumps back into Celonis and looks at the dismissal attribute  (29:30-33:00).\\\n    Then he reminds himself about the guiding question and starts summarizing the circumstances he could identify so far. However, [get distracted again ?] he is diving into the dismissal attribute again and tries different filtering options [not successful]. He gets reminded about the time and decides to stop the analysis [33:00-38:00]\\\"\",\n    analysisExpertise: \"Good\",\n    tool: [\"Celonis\", \"ProM\"],\n  },\n\n  //Participant 9\n  {\n    name: \"Participant 9\",\n    pmExpertise: \"Good\",\n    userStory:\"\\\"The participants starts from reading the Artifacts & the guiding question (00:00-04:00).\\\n    Then he opens Celonis and starts his analysis from the overview dashboards, notices the timespan in from which the data originates and switches to the process explorer. By increasing the activities he step by steps notices the different activities and variants and jumps back to the artifacts to understand them better (04:00-07:00).\\\n    He starts setting filters and make first conclusions based on the statistics (i.e. majority of cases have no payment activity). Immediately afterwards, he starts creating an OLAP table [but struggles with the data structure] to compare the amount to be paid vs. the total payment. He is not successful. Instead, he starts looking at example cases to better understand the data and it\\'s structure (07:00-14:30).\\\n    Afterwards he starts describing three circumstances. [He notices that so far he has only identified two, so he is now working switching his approach and try to understand if the third circumstance/hypothesis is correct]. Even though he is not able to find support for his third circumstance in the data, he switches to the second part of the question, namely to give a reason for each circumstance (14:30-15:30). \\\n    [Replanning] The participants continues with trying to identify how many cases are not paid in full with the help of setting up a OLAP table. He is not successful and notice that he might be able to identify reasons without knowing how many cases are affected (15:30-24:00).\\\n    However, he notices again that he needs the number of cases not paid in full to be able to continue. He explains why he needs it but also states, that his Dashboard capabilities ends there. Nevertheless, he continues trying to set up a PU-Function on the OLAP table (24:00-28:30). He is not successful.\\\n    He opens the raw data [but it seems like he is not getting anything out of it] but switches back to Celonis and continues working with the PU-Function. He is not successful and decides to continue with the follow-up questions (28:30-33:00).\\\n    \\\"\",\n    analysisExpertise: \"Good\",\n    tool: [\"Celonis\"],\n  },\n];\n\nexport default participants;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/NavBar.js",["111","112","113","114","115","116"],[],"import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport {Link} from \"react-router-dom\"\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst pages = ['Overview','Tools','Expertise'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nfunction ResponsiveAppBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <CssBaseline />\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            ProMiSE\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">\n                    <Link style={{textDecoration:\"none\", color:\"white\"}} to={`/${page}`}>\n                        {page}\n                    </Link>\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            ProMiSE\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                <Link style={{textDecoration:\"none\", color:\"white\"}} to={`/${page}`}>\n                    {page}\n                </Link>\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default ResponsiveAppBar;","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Footer.js",["117","118","119","120","121","122","123","124","125"],[],"import React from \"react\";\nimport {\n  Typography,\n  AppBar,\n  Link,\n  Menu,\n  Grid,\n  Toolbar,\n  Container,\n  Tabs,\n  Tab,\n  Box,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport useStyles from \"../styles\";\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <Container\n      sx={{\n        py: 3,\n        px: 2,\n        mt: \"auto\",\n        backgroundColor: (theme) =>\n          theme.palette.mode === \"light\"\n            ? theme.palette.grey[200]\n            : theme.palette.grey[800],\n      }}\n    >\n      <CssBaseline />\n      <Grid container spacing={2} direction=\"row\">\n        <Grid item xs={12}>\n          <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\">\n              ProMiSE: Process Mining Support for End-users\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              align=\"center\"\n              color=\"textSecondary\"\n            >\n              Institute of Computer Science - ICS-HSG\n            </Typography>\n          </footer>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\nexport default Footer;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Overview.js",[],[],"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Expertise.js",["126","127","128","129","130","131","132","133","134"],[],"import React from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  Container,\n  CardMedia,\n  Modal,\n  Box,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport useStyles from \"../styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport PmExpertise from \"./subcomponents/PmExpertise\";\nimport AnalysisExpertise from \"./subcomponents/AnalysisExpertise\";\nimport VerticalSpace from \"./subcomponents/VerticalSpace\";\n\nconst Expertise = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const [selectedTab, setSelectedTab] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <Grid container spacing={2} direction=\"row\">\n        <VerticalSpace />\n        <VerticalSpace />\n        <Grid item xs={12}>\n          <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\n            ProMiSE expertise data\n          </Typography>\n        </Grid>\n        <Grid item xs={3}></Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" color=\"textPrimary\" align=\"center\">\n            The chosen participants have different levels of expertise. Here you\n            find how experienced a certain participant in terms of process\n            mining and analysis is.\n          </Typography>\n        </Grid>\n        <Grid item xs={3}></Grid>\n        <VerticalSpace />\n        <Grid item xs={12}>\n          <Divider p={5} />\n        </Grid>\n        <VerticalSpace />\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n              <Tabs value={selectedTab} onChange={handleChange} centered>\n                <Tab label=\"Process mining expertise\" />\n                <Tab label=\"Analysis expertise\" />\n              </Tabs>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            {selectedTab === 0 && <PmExpertise />}\n            {selectedTab === 1 && <AnalysisExpertise />}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Expertise;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Home.js",[],[],"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/Tools.js",["135","136","137","138","139","140","141","142","143","144"],[],"import React from \"react\";\nimport { Typography, Button, Card, CardActions, CardContent, Divider, Grid, Container, CardMedia, Box, Modal } from '@material-ui/core'\n\nimport useStyles from \"../styles\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport VerticalSpace from \"./subcomponents/VerticalSpace\";\nimport {useState} from \"react\"\n\n\nimport participants from \"../data/Participants\";\n\n\nconst Tools = () => {\n    const classes = useStyles()\n\n    //added\n    const [toolValue, setTool] = React.useState('');\n    const [selectedParticipants, setSelectedParticipants] = React.useState(participants);\n\n    const handleSelectedParticipants = (value) => {\n        var selectedParticipants = []\n        participants.map(participant => {\n            if (participant.tool.includes(value)) {\n                console.log(participant.name)\n                selectedParticipants.push(participant)\n            }\n        });\n        if (value == \"None\") {\n            selectedParticipants = participants\n        }\n        setSelectedParticipants(selectedParticipants)\n    }\n\n    const handleChangeTool = (event) => {\n      setTool(event.target.value);\n      handleSelectedParticipants(event.target.value)\n    };\n\n    const [open, setOpen] = useState(false);\n\n    return (\n            <Container maxWidth=\"lg\">\n                <CssBaseline />\n                <Grid container spacing={2} direction=\"row\">\n                <VerticalSpace/>\n                <VerticalSpace/>\n                <Grid item xs={12}>\n                    <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\n                        ProMiSE tool data\n                    </Typography>\n                </Grid>\n                <Grid item xs={3}></Grid>\n                <Grid item xs={6}>\n                    <Typography variant=\"body1\" color=\"textPrimary\" align=\"center\">\n                    For their analysis the participants use different tools. Here you find which tools certain participants used for the task.\n                    </Typography>\n                </Grid>\n                <VerticalSpace/>\n                <Grid item xs={3}></Grid>\n                <Grid item xs={12}>\n                    <Divider p={5}/>\n                </Grid>\n                <VerticalSpace/>\n                <Grid item xs={12} align=\"center\">\n                <FormControl sx={{ m: 1, minWidth: 120 }} >\n                    <CssBaseline />\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tool</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={toolValue}\n                    label=\"Tool\"\n                    onChange={handleChangeTool}\n                    >\n                    <MenuItem value=\"None\">\n                        <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"Disco\"}>Disco</MenuItem>\n                    <MenuItem value={\"Celonis\"}>Celonis</MenuItem>\n                    <MenuItem value={\"BupaR\"}>BupaR</MenuItem>\n                    <MenuItem value={\"Pm4Py\"}>Pm4Py</MenuItem>\n                    </Select>\n                    <FormHelperText>Select Tool</FormHelperText>\n                </FormControl>\n                </Grid>\n                <VerticalSpace/>\n                <Grid item xs={12}>\n                    <Divider p={5}/>\n                </Grid>\n                <VerticalSpace/>\n                <Grid container spacing={4}>\n                    <Grid item xs={12} sm={8} md={6}>\n                        <Card className={classes.card} style={{ border: \"none\", boxShadow: \"none\" }}>\n                            <CardMedia \n                                className = {classes.cardMediaLegend}\n                                image={require('../data/legends/how_legend.jpg')}\n                            />\n                            <CardContent className={classes.cardContent} align=\"center\">\n                                <Typography variant=\"h5\">\n                                    How legend\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={8} md={6}>\n                        <Card className={classes.card} style={{ border: \"none\", boxShadow: \"none\" }}>\n                            <CardMedia \n                                className = {classes.cardMediaLegend}\n                                image={require('../data/legends/what_legend.jpg')}\n                            />\n                            <CardContent className={classes.cardContent} align=\"center\">\n                                <Typography variant=\"h5\">\n                                    What legend\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n                {toolValue != 'None' && toolValue != '' &&\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Divider p={5}/>\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={6}>\n                            <Card className={classes.card}>\n                                <CardMedia \n                                    className = {classes.cardMediaLarge}\n                                    image={require('../data/tools/'+String(toolValue).toLowerCase()+'/'+String(toolValue).toLowerCase()+'_how.jpg')} \n                                />\n                                <CardContent className={classes.cardContent} align=\"center\">\n                                    <Typography variant=\"h5\">\n                                        How data\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} sm={8} md={6}>\n                            <Card className={classes.card}>\n                                <CardMedia \n                                    className = {classes.cardMediaLarge}\n                                    image={require('../data/tools/'+String(toolValue).toLowerCase()+'/'+String(toolValue).toLowerCase()+'_what.jpg')} \n                                />\n                                <CardContent className={classes.cardContent} align=\"center\">\n                                    <Typography variant=\"h5\">\n                                        What data\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <VerticalSpace/>\n                    </Grid>\n                }\n                <Grid item xs={12}>\n                    <Divider p={5}/>\n                </Grid>\n                <VerticalSpace/>\n                <VerticalSpace/>\n                <Grid container spacing={4} style={{maxHeight: '60vh', overflow: 'hidden', overflowY: \"scroll\"}}>\n                    {selectedParticipants.map((participant) => (   \n                    <Grid item key={participant.name} xs={12} sm={6} md={4}>\n                            <Card className={classes.card}>\n                                <Typography variant=\"h6\" align=\"center\">\n                                    {participant.name}\n                                </Typography>\n                                <Typography variant=\"body1\" align=\"center\">\n                                    Tools: {participant.tool.join(', ')}\n                                </Typography>\n                                <CardMedia \n                                    className = {classes.cardMedia}\n                                    image={require('../data/participant_profiles/'+String(participant.name)+'.jpg')} \n                                />\n                            </Card>\n                        </Grid>\n                        ))}\n                </Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <Divider p={5}/>\n                </Grid>\n                </Grid>\n        </Container>\n    );\n}\n\nexport default Tools;","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/UserProfile.js",["145","146","147","148","149","150","151"],[],"import React from \"react\";\nimport {\n  Tabs,\n  Tab,\n  Grid,\n  Typography,\n  Container,\n  Box,\n  Card,\n  CardMedia,\n  CardContent,\n  Divider,\n} from \"@material-ui/core\";\n\nimport useStyles from \"../../styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nfunction UserProfile({ children }) {\n  const classes = useStyles();\n  return (\n    <Box sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n      <CssBaseline />\n      <Card className={classes.card} style={{ border: \"none\", boxShadow: \"none\" }}>\n        <CardMedia\n          className={classes.cardMediaOverview}\n          image={require(\"../../data/participant_profiles/\" +\n            String(children) +\n            \".jpg\")}\n          title=\"Image title\"\n        />\n      </Card>\n    </Box>\n  );\n}\nexport default UserProfile;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/UserStory.js",["152","153","154","155","156","157"],[],"import React from \"react\";\nimport {\n  Tabs,\n  Tab,\n  Grid,\n  Typography,\n  Container,\n  Box,\n  Card,\n  CardMedia,\n  CardContent,\n  Divider,\n} from \"@material-ui/core\";\n\nimport useStyles from \"../../styles\";\nimport participants from \"../../data/Participants\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nfunction UserProfile({ children, value, index }) {\n  const classes = useStyles();\n  return (\n    <Box>\n      <CssBaseline />\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"body1\">{participants[index].userStory}</Typography>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default UserProfile;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/VerticalSpace.js",["158"],[],"/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/PmExpertise.js",["159","160","161","162","163","164","165","166","167","168","169"],[],"import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  Container,\n  CardMedia,\n  Modal,\n  Box,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport participants from \"../../data/Participants\";\nimport useStyles from \"../../styles\";\nimport VerticalSpace from \"./VerticalSpace\";\n\nconst PmExpertise = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const [pmExpertise, setPmExpertise] = React.useState(\"\");\n  const [selectedParticipantsPM, setSelectedParticipantsPM] =\n    React.useState(participants);\n\n  const handleSelectedParticipantsPM = (value) => {\n    console.log(value);\n\n    var selectedParticipants = [];\n    participants.map((participant) => {\n      if (participant.pmExpertise === value) {\n        selectedParticipants.push(participant);\n      }\n    });\n    if (value == \"None\") {\n      selectedParticipants = participants;\n    }\n    setSelectedParticipantsPM(selectedParticipants);\n  };\n\n  const handleChangePMExpertise = (event) => {\n    setPmExpertise(event.target.value);\n    handleSelectedParticipantsPM(event.target.value);\n  };\n\n  return (\n    <Container>\n      <CssBaseline />\n      <Grid item xs={12} align=\"center\"></Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} align=\"center\">\n          <FormControl sx={{ m: 1, minWidth: 120 }}>\n            <InputLabel id=\"demo-simple-select-helper-label\">PM</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-helper-label\"\n              id=\"demo-simple-select-helper\"\n              value={pmExpertise}\n              label=\"PM expertise\"\n              onChange={handleChangePMExpertise}\n            >\n              <MenuItem value=\"None\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"Basic\"}>Basic</MenuItem>\n              <MenuItem value={\"Average\"}>Average</MenuItem>\n              <MenuItem value={\"Good\"}>Good</MenuItem>\n              <MenuItem value={\"Advanced\"}>Advanced</MenuItem>\n            </Select>\n            <FormHelperText>Select PM expertise</FormHelperText>\n          </FormControl>\n        </Grid>\n        {selectedParticipantsPM.map((participant) => (\n          <Grid item key={participant.name} xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image={require(\"../../data/participant_profiles/\" +\n                  String(participant.name) +\n                  \"_blank\" +\n                  \".jpg\")}\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography variant=\"h5\">{participant.name}</Typography>\n                <Typography variant=\"body2\" sx={{ fontWeight: \"bold\" }}>\n                  Process Mining expertise: {participant.pmExpertise}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n        <Grid item xs={12}></Grid>\n        <Grid item xs={12}></Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Divider p={5} />\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PmExpertise;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/AnalysisExpertise.js",["170","171","172","173","174","175","176","177","178","179"],[],"import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport useStyles from \"../../styles\";\nimport { useState } from \"react\";\n\nimport {\n  Typography,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  Container,\n  CardMedia,\n  Modal,\n  Box,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\n\nimport participants from \"../../data/Participants\";\n\nconst AnalysisExpertise = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const [analysisExpertise, setAnalysisExpertise] = React.useState(\"\");\n  const [selectedParticipantsExpertise, setSelectedParticipantsExpertise] =\n    React.useState(participants);\n\n  const handleSelectedParticipants = (value) => {\n    console.log(value);\n\n    var selectedParticipants = [];\n    participants.map((participant) => {\n      if (participant.analysisExpertise === value) {\n        selectedParticipants.push(participant);\n      }\n    });\n    if (value == \"None\") {\n      selectedParticipants = participants;\n    }\n    setSelectedParticipantsExpertise(selectedParticipants);\n  };\n\n  const handleChangeAnalysisExpertise = (event) => {\n    setAnalysisExpertise(event.target.value);\n    handleSelectedParticipants(event.target.value);\n  };\n\n  return (\n    <Container>\n      <CssBaseline />\n      <Grid item xs={12} align=\"center\"></Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} align=\"center\">\n          <FormControl sx={{ m: 1, minWidth: 120 }}>\n            <InputLabel id=\"demo-simple-select-helper-label\">\n              Analysis\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-helper-label\"\n              id=\"demo-simple-select-helper\"\n              value={analysisExpertise}\n              label=\"Analysis expertise\"\n              onChange={handleChangeAnalysisExpertise}\n            >\n              <MenuItem value=\"None\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"Basic\"}>Basic</MenuItem>\n              <MenuItem value={\"Average\"}>Average</MenuItem>\n              <MenuItem value={\"Good\"}>Good</MenuItem>\n              <MenuItem value={\"Advanced\"}>Advanced</MenuItem>\n            </Select>\n            <FormHelperText>Select analysis expertise</FormHelperText>\n          </FormControl>\n        </Grid>\n        {selectedParticipantsExpertise.map((participant) => (\n          <Grid item key={participant.name} xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image={require(\"../../data/participant_profiles/\" +\n                  String(participant.name) +\n                  \"_blank\" +\n                  \".jpg\")}\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography variant=\"h5\">{participant.name}</Typography>\n                <Typography variant=\"body2\" sx={{ fontWeight: \"bold\" }}>\n                  Process Mining expertise: {participant.pmExpertise}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n        <Grid item xs={12}></Grid>\n        <Grid item xs={12}></Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Divider p={5} />\n      </Grid>\n    </Container>\n  );\n};\n\nexport default AnalysisExpertise;\n","/Users/nicolaskesseli/NICOLAS_KESSELI/Programming/Lokal/promise-frontend/src/components/subcomponents/VerticalSpace.js",[],[],{"ruleId":"180","severity":1,"message":"181","line":14,"column":9,"nodeType":"182","messageId":"183","endLine":14,"endColumn":14},{"ruleId":"180","severity":1,"message":"184","line":15,"column":9,"nodeType":"182","messageId":"183","endLine":15,"endColumn":14},{"ruleId":"180","severity":1,"message":"185","line":16,"column":9,"nodeType":"182","messageId":"183","endLine":16,"endColumn":16},{"ruleId":"180","severity":1,"message":"186","line":18,"column":10,"nodeType":"182","messageId":"183","endLine":18,"endColumn":21},{"ruleId":"180","severity":1,"message":"187","line":20,"column":9,"nodeType":"182","messageId":"183","endLine":20,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":14,"endColumn":318},{"ruleId":"192","severity":1,"message":"193","line":12,"column":19,"nodeType":"190","messageId":"194","endLine":12,"endColumn":20,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"193","line":12,"column":472,"nodeType":"190","messageId":"194","endLine":12,"endColumn":473,"suggestions":"196"},{"ruleId":"192","severity":1,"message":"193","line":14,"column":269,"nodeType":"190","messageId":"194","endLine":14,"endColumn":270,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"189","line":24,"column":15,"nodeType":"190","messageId":"191","endLine":31,"endColumn":276},{"ruleId":"188","severity":1,"message":"189","line":40,"column":15,"nodeType":"190","messageId":"191","endLine":49,"endColumn":8},{"ruleId":"188","severity":1,"message":"189","line":58,"column":15,"nodeType":"190","messageId":"191","endLine":65,"endColumn":116},{"ruleId":"188","severity":1,"message":"189","line":74,"column":15,"nodeType":"190","messageId":"191","endLine":80,"endColumn":323},{"ruleId":"192","severity":1,"message":"193","line":77,"column":140,"nodeType":"190","messageId":"194","endLine":77,"endColumn":141,"suggestions":"198"},{"ruleId":"188","severity":1,"message":"189","line":89,"column":15,"nodeType":"190","messageId":"191","endLine":104,"endColumn":326},{"ruleId":"188","severity":1,"message":"189","line":114,"column":5,"nodeType":"190","messageId":"191","endLine":117,"endColumn":524},{"ruleId":"188","severity":1,"message":"189","line":127,"column":5,"nodeType":"190","messageId":"191","endLine":134,"endColumn":342},{"ruleId":"188","severity":1,"message":"189","line":143,"column":15,"nodeType":"190","messageId":"191","endLine":150,"endColumn":8},{"ruleId":"192","severity":1,"message":"193","line":145,"column":388,"nodeType":"190","messageId":"194","endLine":145,"endColumn":389,"suggestions":"199"},{"ruleId":"180","severity":1,"message":"200","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":14},{"ruleId":"180","severity":1,"message":"201","line":12,"column":8,"nodeType":"182","messageId":"183","endLine":12,"endColumn":15},{"ruleId":"180","severity":1,"message":"202","line":18,"column":7,"nodeType":"182","messageId":"183","endLine":18,"endColumn":15},{"ruleId":"180","severity":1,"message":"203","line":22,"column":10,"nodeType":"182","messageId":"183","endLine":22,"endColumn":22},{"ruleId":"180","severity":1,"message":"204","line":27,"column":9,"nodeType":"182","messageId":"183","endLine":27,"endColumn":27},{"ruleId":"180","severity":1,"message":"205","line":35,"column":9,"nodeType":"182","messageId":"183","endLine":35,"endColumn":28},{"ruleId":"180","severity":1,"message":"206","line":4,"column":3,"nodeType":"182","messageId":"183","endLine":4,"endColumn":9},{"ruleId":"180","severity":1,"message":"207","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":7},{"ruleId":"180","severity":1,"message":"208","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":7},{"ruleId":"180","severity":1,"message":"209","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":10},{"ruleId":"180","severity":1,"message":"210","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":7},{"ruleId":"180","severity":1,"message":"211","line":11,"column":3,"nodeType":"182","messageId":"183","endLine":11,"endColumn":6},{"ruleId":"180","severity":1,"message":"212","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":6},{"ruleId":"180","severity":1,"message":"213","line":13,"column":3,"nodeType":"182","messageId":"183","endLine":13,"endColumn":13},{"ruleId":"180","severity":1,"message":"214","line":14,"column":3,"nodeType":"182","messageId":"183","endLine":14,"endColumn":9},{"ruleId":"180","severity":1,"message":"214","line":4,"column":3,"nodeType":"182","messageId":"183","endLine":4,"endColumn":9},{"ruleId":"180","severity":1,"message":"215","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":7},{"ruleId":"180","severity":1,"message":"216","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":14},{"ruleId":"180","severity":1,"message":"217","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"218","line":11,"column":3,"nodeType":"182","messageId":"183","endLine":11,"endColumn":12},{"ruleId":"180","severity":1,"message":"219","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":8},{"ruleId":"180","severity":1,"message":"185","line":26,"column":9,"nodeType":"182","messageId":"183","endLine":26,"endColumn":16},{"ruleId":"180","severity":1,"message":"220","line":27,"column":10,"nodeType":"182","messageId":"183","endLine":27,"endColumn":14},{"ruleId":"180","severity":1,"message":"221","line":27,"column":16,"nodeType":"182","messageId":"183","endLine":27,"endColumn":23},{"ruleId":"180","severity":1,"message":"214","line":2,"column":22,"nodeType":"182","messageId":"183","endLine":2,"endColumn":28},{"ruleId":"180","severity":1,"message":"216","line":2,"column":36,"nodeType":"182","messageId":"183","endLine":2,"endColumn":47},{"ruleId":"180","severity":1,"message":"212","line":2,"column":99,"nodeType":"182","messageId":"183","endLine":2,"endColumn":102},{"ruleId":"180","severity":1,"message":"219","line":2,"column":104,"nodeType":"182","messageId":"183","endLine":2,"endColumn":109},{"ruleId":"222","severity":1,"message":"223","line":27,"column":38,"nodeType":"224","messageId":"225","endLine":27,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":33,"column":19,"nodeType":"228","messageId":"229","endLine":33,"endColumn":21},{"ruleId":"180","severity":1,"message":"220","line":44,"column":12,"nodeType":"182","messageId":"183","endLine":44,"endColumn":16},{"ruleId":"180","severity":1,"message":"221","line":44,"column":18,"nodeType":"182","messageId":"183","endLine":44,"endColumn":25},{"ruleId":"226","severity":1,"message":"230","line":124,"column":28,"nodeType":"228","messageId":"229","endLine":124,"endColumn":30},{"ruleId":"226","severity":1,"message":"230","line":124,"column":51,"nodeType":"228","messageId":"229","endLine":124,"endColumn":53},{"ruleId":"180","severity":1,"message":"210","line":3,"column":3,"nodeType":"182","messageId":"183","endLine":3,"endColumn":7},{"ruleId":"180","severity":1,"message":"211","line":4,"column":3,"nodeType":"182","messageId":"183","endLine":4,"endColumn":6},{"ruleId":"180","severity":1,"message":"231","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":7},{"ruleId":"180","severity":1,"message":"232","line":6,"column":3,"nodeType":"182","messageId":"183","endLine":6,"endColumn":13},{"ruleId":"180","severity":1,"message":"233","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":12},{"ruleId":"180","severity":1,"message":"217","line":11,"column":3,"nodeType":"182","messageId":"183","endLine":11,"endColumn":14},{"ruleId":"180","severity":1,"message":"234","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":10},{"ruleId":"180","severity":1,"message":"210","line":3,"column":3,"nodeType":"182","messageId":"183","endLine":3,"endColumn":7},{"ruleId":"180","severity":1,"message":"211","line":4,"column":3,"nodeType":"182","messageId":"183","endLine":4,"endColumn":6},{"ruleId":"180","severity":1,"message":"231","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":7},{"ruleId":"180","severity":1,"message":"233","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":12},{"ruleId":"180","severity":1,"message":"218","line":10,"column":3,"nodeType":"182","messageId":"183","endLine":10,"endColumn":12},{"ruleId":"180","severity":1,"message":"234","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":10},{"ruleId":"235","severity":1,"message":"236","line":4,"column":25,"nodeType":"237","messageId":"229","endLine":4,"endColumn":28},{"ruleId":"180","severity":1,"message":"214","line":12,"column":3,"nodeType":"182","messageId":"183","endLine":12,"endColumn":9},{"ruleId":"180","severity":1,"message":"216","line":14,"column":3,"nodeType":"182","messageId":"183","endLine":14,"endColumn":14},{"ruleId":"180","severity":1,"message":"219","line":20,"column":3,"nodeType":"182","messageId":"183","endLine":20,"endColumn":8},{"ruleId":"180","severity":1,"message":"212","line":21,"column":3,"nodeType":"182","messageId":"183","endLine":21,"endColumn":6},{"ruleId":"180","severity":1,"message":"211","line":22,"column":3,"nodeType":"182","messageId":"183","endLine":22,"endColumn":6},{"ruleId":"180","severity":1,"message":"210","line":23,"column":3,"nodeType":"182","messageId":"183","endLine":23,"endColumn":7},{"ruleId":"180","severity":1,"message":"238","line":27,"column":8,"nodeType":"182","messageId":"183","endLine":27,"endColumn":21},{"ruleId":"180","severity":1,"message":"220","line":32,"column":10,"nodeType":"182","messageId":"183","endLine":32,"endColumn":14},{"ruleId":"180","severity":1,"message":"221","line":32,"column":16,"nodeType":"182","messageId":"183","endLine":32,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":42,"column":36,"nodeType":"224","messageId":"225","endLine":42,"endColumn":38},{"ruleId":"226","severity":1,"message":"227","line":47,"column":15,"nodeType":"228","messageId":"229","endLine":47,"endColumn":17},{"ruleId":"180","severity":1,"message":"214","line":14,"column":3,"nodeType":"182","messageId":"183","endLine":14,"endColumn":9},{"ruleId":"180","severity":1,"message":"216","line":16,"column":3,"nodeType":"182","messageId":"183","endLine":16,"endColumn":14},{"ruleId":"180","severity":1,"message":"219","line":22,"column":3,"nodeType":"182","messageId":"183","endLine":22,"endColumn":8},{"ruleId":"180","severity":1,"message":"212","line":23,"column":3,"nodeType":"182","messageId":"183","endLine":23,"endColumn":6},{"ruleId":"180","severity":1,"message":"211","line":24,"column":3,"nodeType":"182","messageId":"183","endLine":24,"endColumn":6},{"ruleId":"180","severity":1,"message":"210","line":25,"column":3,"nodeType":"182","messageId":"183","endLine":25,"endColumn":7},{"ruleId":"180","severity":1,"message":"220","line":33,"column":10,"nodeType":"182","messageId":"183","endLine":33,"endColumn":14},{"ruleId":"180","severity":1,"message":"221","line":33,"column":16,"nodeType":"182","messageId":"183","endLine":33,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":43,"column":36,"nodeType":"224","messageId":"225","endLine":43,"endColumn":38},{"ruleId":"226","severity":1,"message":"227","line":48,"column":15,"nodeType":"228","messageId":"229","endLine":48,"endColumn":17},"no-unused-vars","'cards' is assigned a value but never used.","Identifier","unusedVar","'pages' is assigned a value but never used.","'classes' is assigned a value but never used.","'anchorElNav' is assigned a value but never used.","'handleCloseNavMenu' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","no-useless-escape","Unnecessary escape character: \\'.","unnecessaryEscape",["239","240"],["241","242"],["243","244"],["245","246"],["247","248"],"'Avatar' is defined but never used.","'Tooltip' is defined but never used.","'settings' is assigned a value but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","'AppBar' is defined but never used.","'Link' is defined but never used.","'Menu' is defined but never used.","'Toolbar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Modal' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Divider' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'VerticalSpace' is defined but never used.",{"messageId":"249","fix":"250","desc":"251"},{"messageId":"252","fix":"253","desc":"254"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"252","fix":"256","desc":"254"},{"messageId":"249","fix":"257","desc":"251"},{"messageId":"252","fix":"258","desc":"254"},{"messageId":"249","fix":"259","desc":"251"},{"messageId":"252","fix":"260","desc":"254"},{"messageId":"249","fix":"261","desc":"251"},{"messageId":"252","fix":"262","desc":"254"},"removeEscape",{"range":"263","text":"264"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"265","text":"266"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"267","text":"264"},{"range":"268","text":"266"},{"range":"269","text":"264"},{"range":"270","text":"266"},{"range":"271","text":"264"},{"range":"272","text":"266"},{"range":"273","text":"264"},{"range":"274","text":"266"},[1345,1346],"",[1345,1345],"\\",[1798,1799],[1798,1798],[2222,2223],[2222,2222],[9541,9542],[9541,9541],[20535,20536],[20535,20535]]